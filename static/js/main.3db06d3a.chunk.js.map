{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","Profile","_ref","refreshUser","userObj","_useState","useState","displayName","_useState2","Object","slicedToArray","newDisplayName","setNewDisplayName","navigate","useNavigate","onSubmit","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","auth","wrap","_context","prev","next","preventDefault","updateProfile","currentUser","stop","_x","apply","this","arguments","react_default","a","createElement","className","type","placeholder","onChange","value","target","autoFocus","style","marginTop","onClick","signOut","AuthForm","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","newAccount","setNewAccount","_useState7","_useState8","error","setError","_event$target","name","AuthForm_regeneratorRuntime","createUserWithEmailAndPassword","signInWithEmailAndPassword","t0","message","Fragment","required","Auth","onSocialClikc","Auth_regeneratorRuntime","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","index_es","icon","faTwitter","color","size","marginBottom","components_AuthForm","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","Tweet_regeneratorRuntime","window","confirm","deleteDoc","doc","id","fileUrl","deleteObject","ref","onUpdateClick","_ref3","_callee2","_context2","_ref4","_callee3","_context3","updateDoc","vlaue","src","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","file","setFile","TweetFactory_regeneratorRuntime","fileRef","concat","uid","v4","uploadString","getDownloadURL","sent","createAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","objectSpread","data","components_TweetFactory","components_Tweet","key","Navigation","display","justifyContent","react_router_dom","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","components_Navigation","maxWidth","width","margin","react_router","path","element","routes_Home","routes_Auth","App","init","setInit","setUserObj","onAuthStateChanged","user","App_regeneratorRuntime","updateCurrentUser","Router","Boolean","ReactDOM","createRoot","document","getElementById","render","components_App"],"mappings":"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","file":"static/js/main.3db06d3a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBzB33YGgK2teYpPD_eBTZE8V54gnXgQ60\",\n    authDomain: \"twitter-3f57d.firebaseapp.com\",\n    projectId: \"twitter-3f57d\",\n    storageBucket: \"twitter-3f57d.appspot.com\",\n    messagingSenderId: \"155801328017\",\n    appId: \"1:155801328017:web:95c0e8ad15bfd326f62230\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n\n  export const authService = getAuth();\n  export const dbService = getFirestore();\n  export const storageService = getStorage();\n  export default app;","import { authService } from \"../fbase\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getAuth, updateProfile } from \"firebase/auth\";\n\nexport default ({refreshUser , userObj}) => {\n  const [newDisplayName , setNewDisplayName] = useState(userObj.displayName);\n  const navigate = useNavigate();\n  const onLogOutClick = () => {\n        authService.signOut();\n        navigate(\"/\");\n  }\n  const onChange = (event) => {\n    const {\n      target:{ value },\n    } = event;\n    setNewDisplayName(value);\n\n  }\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if(userObj.displayName !== newDisplayName){\n      \n      const auth = getAuth();\n      await updateProfile(auth.currentUser, {\n          displayName: newDisplayName\n      })\n      refreshUser();\n    }\n  }\n  return (\n      <div className=\"container\">\n        <form onSubmit={onSubmit}>\n          <input \n            type=\"text\" \n            placeholder=\"Display name\" \n            onChange={onChange} \n            value={newDisplayName}\n            autoFocus\n            className=\"formInput\"\n          />\n          <input \n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n}","import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n\n    const [email , setEmail] = useState(\"\");\n    const [password , setPassword] = useState(\"\");\n    const [newAccount , setNewAccount] = useState(\"true\");\n    const [error , setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: {name , value}\n        } = event;\n        if(name === \"email\"){\n            setEmail(value)\n        } else if(name === \"password\"){\n            setPassword(value);\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            if(newAccount){\n                await createUserWithEmailAndPassword(authService , email , password);\n            } else {\n                await signInWithEmailAndPassword(authService , email , password);\n            }\n\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    const toggleAccount = () => {\n        setNewAccount((prev) => !prev);\n    }    \n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input \n                    name=\"email\"\n                    type=\"email\" \n                    placeholder=\"Email\" \n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input \n                    name=\"password\"\n                    type=\"password\" \n                    placeholder=\"Password\" \n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input \n                    type=\"submit\" \n                    value={newAccount ? \"Create Account\" : \"Sign In\" }  \n                    className=\"authInput authSubmit\" \n                />\n                <br/>{error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\" }\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm;","import { authService } from \"../fbase\";\nimport React from \"react\";\nimport { GoogleAuthProvider , GithubAuthProvider , signInWithPopup } from \"firebase/auth\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n\n\n    const onSocialClikc = async (event) => {\n        const {\n            target: {name}\n        } = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new GoogleAuthProvider();\n        }else if(name === \"github\"){\n            provider = new GithubAuthProvider();\n        }\n\n        await signInWithPopup(authService , provider);\n    }\n    return ( \n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClikc} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClikc} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport { dbService , storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({tweetObj , isOwner} ) => {\n    const [editing , setEditing] = useState(false);\n    const [newTweet , setNewTweet] = useState(tweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"정말 삭제 하시겠습니까?\");\n        if(ok){\n            await deleteDoc(doc(dbService, \"tweets\" , tweetObj.id));\n            if(tweetObj.fileUrl !== \"\"){\n                await deleteObject(ref(storageService, tweetObj.fileUrl)); \n            }\n        }\n    }\n    const onUpdateClick = async () => {\n        setEditing((prev) => !prev);\n    }\n    const onChange = (event) => {\n        const {\n            target: {value}\n        } = event;\n        setNewTweet(value);\n    }\n    const onSubmit = async () => {\n        await updateDoc(doc(dbService, \"tweets\", tweetObj.id), { text: newTweet });\n        onUpdateClick();\n    }\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}  className=\"container nweetEdit\">\n                        <input \n                            onChange={onChange}\n                            type=\"text\" \n                            placeholder=\"수정할 내용을 입력하세요\" \n                            vlaue={newTweet} \n                            required \n                            autoFocus\n                            className=\"formInput\"\n                        />\n                         <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <button onClick={onUpdateClick} className=\"formBtn cancelBtn\">Cancle</button>\n                </>   \n                ) : (\n                <>\n                    <h4>{tweetObj.text}</h4>\n                    {tweetObj.fileUrl && <img src={tweetObj.fileUrl} />}\n                    {isOwner && (\n                         <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}><FontAwesomeIcon icon={faTrash} /></span>\n                            <span onClick={onUpdateClick}><FontAwesomeIcon icon={faPencilAlt} /></span>\n                         </div>\n                    )}\n                </>\n                )\n            } \n        </div>\n    )\n} \nexport default Tweet;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { ref , uploadString , getDownloadURL } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({userObj }) => {\n\n    const [tweet , setTweet] = useState(\"\");\n    const [file , setFile] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let fileUrl = \"\";\n        if(file !== \"\"){\n        const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);\n        await uploadString(fileRef , file , \"data_url\");\n        fileUrl = await getDownloadURL(ref(storageService , fileRef ));\n        }\n        const tweetObj = {\n            text: tweet,\n            createAt: Date.now(),\n            creatorId: userObj.uid,\n            fileUrl,\n        }\n        await addDoc(collection(dbService , \"tweets\"), tweetObj);\n        setTweet(\"\");\n        setFile(\"\");\n    }\n    const onChange = (event) => {\n        const {\n            target:{value},\n        } = event;\n        setTweet(value);\n    }\n    const onFileChange = (event) => {\n        const {target : {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent\n            setFile(result);\n        }\n        reader.readAsDataURL(theFile);\n    }\n    const onClearFileClick = () => {\n        setFile(\"\");\n    }\n       \n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={tweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span><FontAwesomeIcon icon={faPlus} />\n            </label>\n        <input \n            id=\"attach-file\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            style={{\n              opacity: 0,\n            }}\n        />\n        {file &&(\n            <div className=\"factoryForm__attachment\">\n                <img\n                    src={file}\n                    style={{\n                    backgroundImage: file,\n                    }}\n                />\n                <div className=\"factoryForm__clear\" onClick={onClearFileClick}>\n                    <span>Remove</span><FontAwesomeIcon icon={faTimes} />\n                </div>\n            </div>)}\n        </form>\n    )\n}\n\nexport default TweetFactory;","import { dbService } from \"../fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport Tweet from \"../components/Tweet\";\nimport TweetFactory from \"../components/TweetFactory\";\n\n\n\nconst Home = ({userObj}) => {\n\n    const [tweets , setTweets] = useState([]);    \n\n    useEffect(() => {\n        onSnapshot(collection(dbService, \"tweets\"), (snapshot) => {\n            const tweetArray = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data(), \n            }))\n            setTweets(tweetArray);\n        });\n    } , []);\n\n    return (\n    <div className=\"container\">\n        <TweetFactory userObj={userObj}/>\n        <div style={{ marginTop: 30 }}>\n            {tweets.map((tweet) => (\n                <Tweet key={tweet.id} tweetObj={tweet} isOwner={userObj.uid === tweet.creatorId ? true : false} />\n            ))}\n        </div>\n    </div>\n    )\n}\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\"style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/profile\" style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}>\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userObj.displayName? `${userObj.displayName}의 Profile`: \"Profile\"}\n                </span>\n          </Link>\n        </li>\n    </ul>\n</nav>\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router , Routes , Route } from \"react-router-dom\";\nimport Profile from \"../routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({refreshUser , isLoggedIn , userObj }) => {\n    \n    return (\n        <Router>\n        {isLoggedIn && <Navigation userObj={userObj}/> }\n            <div\n                style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n                }}\n            >\n            <Routes>\n                {isLoggedIn ? (\n                    <>     \n                            <Route path=\"/\" element={<Home userObj={userObj}/>}></Route>\n                            <Route path=\"/profile\" element={<Profile refreshUser={refreshUser} userObj={userObj} />} />\n                    </>\n                    \n                ) : (\n                    <>\n                        <Route path=\"/\" element={<Auth />} />\n                    </>\n                )\n                }\n            </Routes> \n        </div>\n      </Router>\n    );\n};\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport {authService} from '../fbase';\nimport { updateCurrentUser } from 'firebase/auth';\n\nfunction App() {\n  const [init , setInit] = useState(false);\n  const [userObj , setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj(user);\n      } else {\n        setUserObj(\"\");\n      }\n      setInit(true);\n    });\n  } , []);\n  const refreshUser = async () => {\n    await updateCurrentUser(authService , authService.currentUser);\n    setUserObj(authService.currentUser);\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser}isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\" }\n    </>  \n  )\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\nimport \"./styles.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);"],"sourceRoot":""}